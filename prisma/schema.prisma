// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionStatus {
  pending
  capture
  settlement
  deny
  cancel
  expire
}

enum OrderProgress {
  confirm
  onProgress
  deny
  finished
}

model Auth {
  id       String @unique @default(cuid())
  userId   String @unique
  user     User   @relation(fields: [userId], references: [id])
  password String
  email    String @unique
}

model User {
  id       String  @unique @default(cuid())
  username String
  phoneNum String?
  Auth     Auth?
  Order    Order[]
}

model Order {
  id            String         @unique @default(cuid())
  sheetCount    Int?
  paperType     String?
  finishing     String?
  quantity      Int?
  printType     String?
  totalPrice    Int?
  status        OrderProgress?
  paymentStatus Boolean?
  documentPath  String
  documentName  String
  userId        String
  orderDate     DateTime
  user          User           @relation(fields: [userId], references: [id])
  Payment       Payment[]
}

model Payment {
  id                String            @unique @default(cuid())
  transactionId     String
  orderId           String
  order             Order             @relation(fields: [orderId], references: [id])
  grossAmount       String
  paymentType       String
  transactionTime   DateTime
  expiryTime        DateTime
  vaNumber          String
  bank              String
  transactionStatus TransactionStatus
}
